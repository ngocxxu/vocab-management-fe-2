name: Build and Push Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Determine version bump type
        id: version
        run: |
          COMMITS=$(git log --format=%B HEAD~1..HEAD)
          BUMP_TYPE="patch"

          if echo "$COMMITS" | grep -E "^feat" > /dev/null; then
            BUMP_TYPE="minor"
          fi

          if echo "$COMMITS" | grep -E "BREAKING CHANGE" > /dev/null; then
            BUMP_TYPE="major"
          fi

          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          npm version ${{ steps.version.outputs.bump_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.version }}" || true
          git tag "v${{ steps.bump.outputs.version }}"
          git push origin HEAD:main --tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/vocab-fe:${{ steps.bump.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/vocab-fe:latest

      - name: Deploy to K3s via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Update deployment image
            kubectl set image deployment/vocab-fe \
              vocab-fe=${{ secrets.DOCKERHUB_USERNAME }}/vocab-fe:${{ steps.bump.outputs.version }} \
              -n vocab-fe

            # Wait for rollout to complete
            kubectl rollout status deployment/vocab-fe -n vocab-fe
